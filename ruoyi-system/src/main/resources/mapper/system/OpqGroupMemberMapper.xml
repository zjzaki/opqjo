<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ruoyi.system.mapper.OpqGroupMemberMapper">

    <resultMap id="opqGroupMemberResultMap" type="OpqGroupMember">
        <result property="groupUid" column="group_uin"/>
        <result property="memberUin" column="member_uin"/>
        <result property="memberUid" column="member_uid"/>
        <result property="memberFlag" column="member_flag"/>
        <result property="lastSpeakTime" column="last_speak_time"/>
        <result property="joinTime" column="join_time"/>
        <result property="creditLevel" column="credit_level"/>
    </resultMap>

    <sql id="selectOpqGroupMemberVo">
        select group_uin,
               member_uin,
               member_uid,
               nick,
               member_flag,
               level,
               last_speak_time,
               join_time,
               credit_level
        from tb_group_member
    </sql>

    <select id="selectOpqGroupMemberList" parameterType="OpqGroupMember" resultMap="opqGroupMemberResultMap">
        <include refid="selectOpqGroupMemberVo"/>
        <where>
            <if test="groupUid != null and groupUid != ''">and group_uin = #{groupUid}</if>
            <if test="memberUin != null and memberUin != ''">and member_uin like concat('%',#{memberUin},'%')</if>
            <if test="nick != null and nick != ''">and nick like concat('%',#{nick},'%')</if>
            and delete_flag = 1
        </where>
        ORDER BY group_uin,FIELD(member_flag,1,2,0),`level` desc,member_uid
    </select>

    <insert id="insertOpqGroupMemberList" parameterType="OpqGroupMember">
        insert into tb_group_member(group_uin, member_uin, member_uid, nick, member_flag, level, last_speak_time,
        join_time, credit_level,delete_flag)
        VALUES
        <foreach collection="list" item="member" separator=",">
            (#{member.groupUid},#{member.memberUin},#{member.memberUid},#{member.nick},#{member.memberFlag},
            #{member.level},#{member.lastSpeakTime},#{member.joinTime},#{member.creditLevel},1)
        </foreach>
        on duplicate key update
        member_uid = values(member_uid),
        nick = values(nick),
        member_flag = values(member_flag),
        level = values(level),
        last_speak_time = values(last_speak_time),
        join_time = values(join_time),
        credit_level = values(credit_level),
        delete_flag = 1
    </insert>

    <update id="updateAllOpqGroupMemberDeleteFlag">
        update tb_group_member
        set delete_flag = 0
    </update>

    <update id="updateOpqGroupMemberDeleteFlagByGroupUin" parameterType="long">
        update tb_group_member
        set delete_flag = 0
        where group_uin = #{groupUin}
    </update>

    <update id="updateOpqGroupMemberLastSpeakTime" parameterType="OpqGroupMember">
        update tb_group_member
        set last_speak_time = #{lastSpeakTime}
        where group_uin = #{groupUid}
          and member_uin = #{memberUin}
    </update>
</mapper>